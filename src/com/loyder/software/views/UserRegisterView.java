/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.loyder.software.views;

import com.loyder.software.main.ApplicationStarter;
import com.loyder.software.model.dao.config.DatabaseConnection;
import com.loyder.software.model.entities.Category;
import com.loyder.software.model.entities.User;
import java.awt.CardLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis Perez
 */
public class UserRegisterView extends javax.swing.JPanel {

    /**
     * Creates new form UserRegisterView
     */
    private static final String[] TABLE_MODEL_RECOMMENDERS = {"Código", "Documento de Identidad", "Nombre", "Apellidos"};
    private static final String[][] EMPTY_TABLE = new String[0][0];

    private final DefaultTableModel tableRecommendersModel;

    private final DefaultComboBoxModel comboBoxCategoriesModel;

    private JPanel panelParent;

    public UserRegisterView(JPanel panelParent1) {
        initComponents();
        this.panelParent = panelParent1;

        tableRecommenders.setDragEnabled(false);
        tableRecommenders.getTableHeader().setReorderingAllowed(false);

        tableRecommendersModel = (DefaultTableModel) tableRecommenders.getModel();
        comboBoxCategoriesModel = (DefaultComboBoxModel) comboBoxNewUserCategory.getModel();

        tableRecommendersModel.setColumnIdentifiers(TABLE_MODEL_RECOMMENDERS);
        
        this.comboBoxNewUserCategory.setSelectedIndex(-1);

        this.goBackButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                ((CardLayout) panelParent.getLayout()).show(panelParent, UsersView.class.getName());
            }
        });
    }

    public void setUIData() {
        comboBoxCategoriesModel.removeAllElements();
        
        ArrayList<Category> categories = DatabaseConnection.getCategoryDao().getAllCategories();
        
        if(categories==null || categories.isEmpty()){
            JOptionPane.showMessageDialog(null, "No hay categorias registradas!");
            return;
        }
        
        categories.forEach(category -> {
            comboBoxCategoriesModel.addElement(category);
        });
        this.comboBoxNewUserCategory.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        topBarPanel = new javax.swing.JPanel();
        goBackButton = new javax.swing.JButton();
        container = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        radioButtonsAdderPanel = new javax.swing.JPanel();
        radioButtonRecommender = new javax.swing.JRadioButton();
        radioButtonNoRecommender = new javax.swing.JRadioButton();
        tablesPanel = new javax.swing.JPanel();
        adderTablePanel = new javax.swing.JPanel();
        searchRecommenderAdderPanel = new javax.swing.JPanel();
        adderNameSearchLabel = new javax.swing.JLabel();
        adderIdSearchTextField = new javax.swing.JFormattedTextField();
        adderNameSearchButton = new javax.swing.JButton();
        adderIdSearchLabel = new javax.swing.JLabel();
        adderNameSearchTextField = new javax.swing.JTextField();
        adderIdSearchButton = new javax.swing.JButton();
        adderUserIdSearchLabel = new javax.swing.JLabel();
        adderUserIdSearchTextField = new javax.swing.JFormattedTextField();
        adderUserIdSearchButton = new javax.swing.JButton();
        buttonShowAllRecommenders = new javax.swing.JButton();
        recommenderAdderTableScrollPane = new javax.swing.JScrollPane();
        tableRecommenders = new JTable(){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        addedFormPanel = new javax.swing.JPanel();
        addedFormInfoPanel = new javax.swing.JPanel();
        userUserIdLabel = new javax.swing.JLabel();
        userUserIdTextField = new javax.swing.JFormattedTextField();
        userNameLabel = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        userLastNameLabel = new javax.swing.JLabel();
        userLastNameTextField = new javax.swing.JTextField();
        userAddressLabel = new javax.swing.JLabel();
        userAddressTextField = new javax.swing.JTextField();
        userTelLabel = new javax.swing.JLabel();
        userTelTextField = new javax.swing.JTextField();
        userCelLabel = new javax.swing.JLabel();
        userCelTextField = new javax.swing.JTextField();
        submitUnregisteredUser = new javax.swing.JButton();
        comboBoxNewUserCategory = new javax.swing.JComboBox<>();
        labelNewUserCategory = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        topBarPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        goBackButton.setText("Cancelar");
        topBarPanel.add(goBackButton);

        add(topBarPanel, java.awt.BorderLayout.PAGE_START);

        container.setLayout(new javax.swing.BoxLayout(container, javax.swing.BoxLayout.Y_AXIS));

        headerPanel.setLayout(new java.awt.GridLayout(1, 2));

        radioButtonsAdderPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "¿El nuevo usuario es recomendado?", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        buttonGroup2.add(radioButtonRecommender);
        radioButtonRecommender.setSelected(true);
        radioButtonRecommender.setText("Sí");
        radioButtonRecommender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonRecommenderActionPerformed(evt);
            }
        });
        radioButtonsAdderPanel.add(radioButtonRecommender);

        buttonGroup2.add(radioButtonNoRecommender);
        radioButtonNoRecommender.setText("No");
        radioButtonNoRecommender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonNoRecommenderActionPerformed(evt);
            }
        });
        radioButtonsAdderPanel.add(radioButtonNoRecommender);

        headerPanel.add(radioButtonsAdderPanel);

        container.add(headerPanel);

        tablesPanel.setLayout(new java.awt.GridLayout(1, 2));

        adderTablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recomendador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        adderTablePanel.setLayout(new java.awt.BorderLayout());

        searchRecommenderAdderPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        searchRecommenderAdderPanel.setLayout(new java.awt.GridBagLayout());

        adderNameSearchLabel.setText("Nombre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        searchRecommenderAdderPanel.add(adderNameSearchLabel, gridBagConstraints);

        adderIdSearchTextField.setColumns(20);
        adderIdSearchTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        searchRecommenderAdderPanel.add(adderIdSearchTextField, gridBagConstraints);

        adderNameSearchButton.setText("Buscar");
        adderNameSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adderNameSearchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        searchRecommenderAdderPanel.add(adderNameSearchButton, gridBagConstraints);

        adderIdSearchLabel.setText("Código:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        searchRecommenderAdderPanel.add(adderIdSearchLabel, gridBagConstraints);

        adderNameSearchTextField.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        searchRecommenderAdderPanel.add(adderNameSearchTextField, gridBagConstraints);

        adderIdSearchButton.setText("Buscar");
        adderIdSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adderIdSearchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        searchRecommenderAdderPanel.add(adderIdSearchButton, gridBagConstraints);

        adderUserIdSearchLabel.setText("Cédula:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        searchRecommenderAdderPanel.add(adderUserIdSearchLabel, gridBagConstraints);

        adderUserIdSearchTextField.setColumns(20);
        adderUserIdSearchTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        searchRecommenderAdderPanel.add(adderUserIdSearchTextField, gridBagConstraints);

        adderUserIdSearchButton.setText("Buscar");
        adderUserIdSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adderUserIdSearchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        searchRecommenderAdderPanel.add(adderUserIdSearchButton, gridBagConstraints);

        buttonShowAllRecommenders.setText("Mostrar todos");
        buttonShowAllRecommenders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonShowAllRecommendersActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        searchRecommenderAdderPanel.add(buttonShowAllRecommenders, gridBagConstraints);

        adderTablePanel.add(searchRecommenderAdderPanel, java.awt.BorderLayout.NORTH);

        tableRecommenders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableRecommenders.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        recommenderAdderTableScrollPane.setViewportView(tableRecommenders);

        adderTablePanel.add(recommenderAdderTableScrollPane, java.awt.BorderLayout.CENTER);

        tablesPanel.add(adderTablePanel);

        addedFormPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nuevo Usuario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        addedFormPanel.setLayout(new java.awt.CardLayout());

        addedFormInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos nuevo usuario"));
        java.awt.GridBagLayout addedFormInfoPanelLayout = new java.awt.GridBagLayout();
        addedFormInfoPanelLayout.columnWidths = new int[] {100, 200};
        addedFormInfoPanel.setLayout(addedFormInfoPanelLayout);

        userUserIdLabel.setText("Cédula: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userUserIdLabel, gridBagConstraints);

        userUserIdTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        userUserIdTextField.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userUserIdTextField, gridBagConstraints);

        userNameLabel.setText("Nombre: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userNameLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userNameTextField, gridBagConstraints);

        userLastNameLabel.setText("Apellidos: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userLastNameLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userLastNameTextField, gridBagConstraints);

        userAddressLabel.setText("Dirección: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userAddressLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userAddressTextField, gridBagConstraints);

        userTelLabel.setText("Teléfono: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userTelLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userTelTextField, gridBagConstraints);

        userCelLabel.setText("Celular: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userCelLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(userCelTextField, gridBagConstraints);

        submitUnregisteredUser.setText("Agregar");
        submitUnregisteredUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitUnregisteredUserActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        addedFormInfoPanel.add(submitUnregisteredUser, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(comboBoxNewUserCategory, gridBagConstraints);

        labelNewUserCategory.setText("Categoría: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addedFormInfoPanel.add(labelNewUserCategory, gridBagConstraints);

        addedFormPanel.add(addedFormInfoPanel, "registerForm");

        tablesPanel.add(addedFormPanel);

        container.add(tablesPanel);

        add(container, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void radioButtonRecommenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonRecommenderActionPerformed
        // TODO add your handling code here:
        if (this.radioButtonRecommender.isSelected()) {
            this.adderTablePanel.setVisible(true);
        }
    }//GEN-LAST:event_radioButtonRecommenderActionPerformed

    private void radioButtonNoRecommenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonNoRecommenderActionPerformed
        // TODO add your handling code here:
        if (this.radioButtonNoRecommender.isSelected()) {
            this.adderTablePanel.setVisible(false);
        }
    }//GEN-LAST:event_radioButtonNoRecommenderActionPerformed

    private void adderNameSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adderNameSearchButtonActionPerformed
        // TODO add your handling code here:
        String name = adderNameSearchTextField.getText();
        if (name.equals("")) {
            JOptionPane.showMessageDialog(this, "El campo no puede estar vacío.");
            return;
        }

        adderNameSearchTextField.setText("");

        tableRecommendersModel.setDataVector(EMPTY_TABLE, TABLE_MODEL_RECOMMENDERS);
        ArrayList<User> users = DatabaseConnection.getUserDao().getUsersByName(name);

        if (users != null && !users.isEmpty()) {
            users.forEach((user) -> {
                tableRecommendersModel.addRow(new Object[]{user.getId(), user.getUserId(),
                    user.getName(), user.getLastName(), user.getAddress(), user.getTel(),
                    user.getCel()});
            });
        } else {
            JOptionPane.showMessageDialog(this, "No se encontraron resultados.");
        }
    }//GEN-LAST:event_adderNameSearchButtonActionPerformed

    private void adderIdSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adderIdSearchButtonActionPerformed
        // TODO add your handling code here:
        Long id = (Long) adderIdSearchTextField.getValue();
        if (id == null) {
            JOptionPane.showMessageDialog(this, "Código digitado inválido.");
            return;
        }

        adderIdSearchTextField.setText("");
        adderIdSearchTextField.setValue(null);

        User user = DatabaseConnection.getUserDao().getUserById(id);
        tableRecommendersModel.setDataVector(EMPTY_TABLE, TABLE_MODEL_RECOMMENDERS);

        if (user != null) {
            tableRecommendersModel.addRow(new Object[]{user.getId(), user.getUserId(),
                user.getName(), user.getLastName(), user.getAddress(), user.getTel(),
                user.getCel()});
        } else {
            JOptionPane.showMessageDialog(this, "No se encontro el recomendador con el código especificado.");
        }
    }//GEN-LAST:event_adderIdSearchButtonActionPerformed

    private void adderUserIdSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adderUserIdSearchButtonActionPerformed
        // TODO add your handling code here:
        Long id = (Long) adderUserIdSearchTextField.getValue();
        if (id == null) {
            JOptionPane.showMessageDialog(this, "Cédula digitada inválida.");
            return;
        }

        adderUserIdSearchTextField.setText("");
        adderUserIdSearchTextField.setValue(null);

        User user = DatabaseConnection.getUserDao().getUserByUserId(id);
        tableRecommendersModel.setDataVector(EMPTY_TABLE, TABLE_MODEL_RECOMMENDERS);

        if (user != null) {
            tableRecommendersModel.addRow(new Object[]{user.getId(), user.getUserId(),
                user.getName(), user.getLastName(), user.getAddress(), user.getTel(),
                user.getCel()});
        } else {
            JOptionPane.showMessageDialog(this, "No se encontro el recomendador con la cédula especificada.");
        }
    }//GEN-LAST:event_adderUserIdSearchButtonActionPerformed

    private void buttonShowAllRecommendersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonShowAllRecommendersActionPerformed
        // TODO add your handling code here:

        tableRecommendersModel.setDataVector(EMPTY_TABLE, TABLE_MODEL_RECOMMENDERS);
        ArrayList<User> users = DatabaseConnection.getUserDao().getAllUsers();

        if (users != null && !users.isEmpty()) {
            users.forEach((user) -> {
                tableRecommendersModel.addRow(new Object[]{user.getId(), user.getUserId(),
                    user.getName(), user.getLastName(), user.getAddress(), user.getTel(),
                    user.getCel()});
            });
        } else {
            JOptionPane.showMessageDialog(this, "No se encontraron resultados.");
        }
    }//GEN-LAST:event_buttonShowAllRecommendersActionPerformed

    private void submitUnregisteredUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitUnregisteredUserActionPerformed
        // TODO add your handling code here:

        Long adderId;
        if (this.radioButtonRecommender.isSelected()) {
            if (tableRecommenders.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "Debes seleccionar un recomendador.");
                return;
            }
            adderId = (Long) tableRecommenders.getValueAt(tableRecommenders.getSelectedRow(), 0);
        } else if (this.radioButtonNoRecommender.isSelected()) {
            adderId = ApplicationStarter.COMPANY_ROOT.getId();
        } else {
            JOptionPane.showMessageDialog(null, "Error!");
            return;
        }

        Long userId = (Long) userUserIdTextField.getValue();
        if (userId == null) {
            JOptionPane.showMessageDialog(null, "Campo cédula incorrecto o vacío");
            return;
        }
        String name = userNameTextField.getText();
        if (name.equals("")) {
            JOptionPane.showMessageDialog(null, "Campo nombre vacío");
            return;
        }
        String lastName = userLastNameTextField.getText();
        if (lastName.equals("")) {
            JOptionPane.showMessageDialog(null, "Campo apellido vacío");
            return;
        }
        String address = userAddressTextField.getText();
        if (address.equals("")) {
            JOptionPane.showMessageDialog(null, "Campo dirección vacío");
            return;
        }
        String tel = userTelTextField.getText();
        if (tel.equals("")) {
            JOptionPane.showMessageDialog(null, "Campo teléfono vacío");
            return;
        }
        String cel = userCelTextField.getText();
        if (cel.equals("")) {
            JOptionPane.showMessageDialog(null, "Campo celular vacío");
            return;
        }
        Long categoryId;
        if(comboBoxNewUserCategory.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null, "No seleccionó categoría.");
            return;
        }
        
        Category c = (Category)comboBoxNewUserCategory.getSelectedItem();
        categoryId = c.getId();
        
        comboBoxNewUserCategory.setSelectedIndex(-1);
        userAddressTextField.setText("");
        userCelTextField.setText("");
        userTelTextField.setText("");
        userNameTextField.setText("");
        userLastNameTextField.setText("");
        userUserIdTextField.setText("");
        userUserIdTextField.setValue(null);
        
        if (DatabaseConnection.getUserDao().addUser(new User(null, userId, name, lastName, address, tel,
                cel, adderId, System.currentTimeMillis(), categoryId))) {
            JOptionPane.showMessageDialog(null, "Usuario agregado con éxito a la red!");
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo agregar al usuario a la red!");
        }
    }//GEN-LAST:event_submitUnregisteredUserActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addedFormInfoPanel;
    private javax.swing.JPanel addedFormPanel;
    private javax.swing.JButton adderIdSearchButton;
    private javax.swing.JLabel adderIdSearchLabel;
    private javax.swing.JFormattedTextField adderIdSearchTextField;
    private javax.swing.JButton adderNameSearchButton;
    private javax.swing.JLabel adderNameSearchLabel;
    private javax.swing.JTextField adderNameSearchTextField;
    private javax.swing.JPanel adderTablePanel;
    private javax.swing.JButton adderUserIdSearchButton;
    private javax.swing.JLabel adderUserIdSearchLabel;
    private javax.swing.JFormattedTextField adderUserIdSearchTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton buttonShowAllRecommenders;
    private javax.swing.JComboBox<String> comboBoxNewUserCategory;
    private javax.swing.JPanel container;
    private javax.swing.JButton goBackButton;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel labelNewUserCategory;
    private javax.swing.JRadioButton radioButtonNoRecommender;
    private javax.swing.JRadioButton radioButtonRecommender;
    private javax.swing.JPanel radioButtonsAdderPanel;
    private javax.swing.JScrollPane recommenderAdderTableScrollPane;
    private javax.swing.JPanel searchRecommenderAdderPanel;
    private javax.swing.JButton submitUnregisteredUser;
    private javax.swing.JTable tableRecommenders;
    private javax.swing.JPanel tablesPanel;
    private javax.swing.JPanel topBarPanel;
    private javax.swing.JLabel userAddressLabel;
    private javax.swing.JTextField userAddressTextField;
    private javax.swing.JLabel userCelLabel;
    private javax.swing.JTextField userCelTextField;
    private javax.swing.JLabel userLastNameLabel;
    private javax.swing.JTextField userLastNameTextField;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameTextField;
    private javax.swing.JLabel userTelLabel;
    private javax.swing.JTextField userTelTextField;
    private javax.swing.JLabel userUserIdLabel;
    private javax.swing.JFormattedTextField userUserIdTextField;
    // End of variables declaration//GEN-END:variables

}
